import { generateRandomString } from '../helpers/idGenerator'

/*
    Adds a comment to localStorage. Returns the whole state object along 
    with a new object that contains the id (generated by a random string 
    generator), the comment itself, the liked status of the comment, replies,
    timestamp of the comment(in terms of hours)
*/
export const addComment = text => ({
    type: 'ADD_COMMENT',
    id: generateRandomString(),
    text
})

/*
    Fetches the comments from the localStorage api.
*/
export const fetchComments = arrayOfComments => ({
    type: 'FETCH_COMMENTS',
    comments: arrayOfComments
})

/*
    Modifies the object that contains the same comment id as the selected one,
    and sets the liked status to true of the comment while returning the same for
    the rest of the unmodified objects.
*/
export const likeComment = id => ({
    type: 'LIKE_COMMENT',
    id: id
})

/*
    Modifies the object that contains the same comment id as the selected one,
    and sets the liked status to false of the comment while returning the same for
    the rest of the unmodified objects.
*/
export const unlikeComment = id => ({
    type: 'UNLIKE_COMMENT',
    id: id
})

/*
    Adds a reply to the replies object (which is an array) as a new object. Returns
    the rest of the unmodified object as like the addComment action as an array, and 
    assigns the new reply with a random string.
*/
export const addReply = (text, id) => ({
    type: 'ADD_REPLY',
    commentId: id,
    replyId: generateRandomString(),
    text
})

/*
    Modifies the object that contains the same comment id and reply id as the selected one,
    and sets the liked status to true of the comment's reply while returning the same for
    the rest of the unmodified objects.
*/
export const likeReply = (commentId, replyId) => ({
    type: 'LIKE_REPLY',
    commentId,
    replyId
})

/*
    Modifies the object that contains the same comment id and reply id as the selected one,
    and sets the liked status to false of the comment's reply while returning the same for
    the rest of the unmodified objects.
*/
export const unlikeReply = (commentId, replyId) => ({
    type: 'UNLIKE_REPLY',
    commentId,
    replyId
})